{"version":3,"sources":["components/TodoItem.jsx","components/TodoForm.jsx","components/Todos.jsx","actions/index.js","containers/TodoContainer.jsx","App.js","reducers/todos.js","reducers/index.js","index.js"],"names":["Line","styled","hr","ListItem","div","TodoItem","props","style","textDecoration","completed","onClick","text","Input","input","Buttons","Button","button","ButtonHide","ButtonNew","TodoForm","onSubmit","onSubmitFrom","action","onChange","updateNewTodoBody","type","placeholder","hideCompleted","addNewTodo","Todos","todoBody","todoState","tasks","todos","map","item","id","toggleTodo","key","e","preventDefault","addTodo","target","value","updateTodoBody","uuidv4","require","v4","TodoContainer","connect","state","console","log","todoReducers","dispatch","AppWrapper","App","initialState","newTodoBody","todo","filter","t","combineReducers","store","createStore","rootReducer","ReactDOM","render","document","getElementById","window"],"mappings":"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","file":"static/js/main.c0158b26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst Line = styled.hr`\r\n    width: 10%;\r\n    border: none;\r\n    margin-left: 0;\r\n    color: rgba(0,0,0,0.5);\r\n    height: 1px;\r\n    background-color: rgba(0,0,0,0.5);\r\n`;\r\n\r\nconst ListItem = styled.div`\r\n    font-family: Roboto;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TodoItem = (props) => {\r\n    return (\r\n        <ListItem style={{textDecoration: props.completed ? 'line-through' : 'none'}} onClick={props.onClick}>\r\n            {props.text}\r\n           <Line/>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n    display: block;\r\n    width: 100%;\r\n    background: inherit;\r\n    border-top: none;\r\n    border-left: none;\r\n    border-right: none;\r\n    outline: none;\r\n    border-bottom: 1px solid;\r\n    color: rgba(0, 0, 0, 0.4);\r\n    font-family: Roboto;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n    margin-top: 60px;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    margin-top: 14px;\r\n    outline: none;\r\n    border: none;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-family: 'Roboto', sans-serif;\r\n    font-style: normal;\r\n    font-weight: 300;\r\n    font-size: 16px;\r\n    line-height: 19px;\r\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.25);\r\n    border: none;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ButtonHide = styled(Button)`\r\n    background: #FFE482;\r\n    padding: 11px 10px 10px 12px;\r\n`;\r\n\r\nconst ButtonNew = styled(Button)`\r\n    background: #FFFFFF;\r\n    padding: 11px 37px 10px 35px;\r\n`;\r\n\r\nconst TodoForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.onSubmitFrom} action=\"\">\r\n            <Input onChange={props.updateNewTodoBody} type=\"text\" placeholder=\"Enter a new todo item\"/>\r\n            <Buttons>\r\n                <ButtonHide onClick={props.hideCompleted}>Hide completed</ButtonHide>\r\n                <ButtonNew onClick={props.addNewTodo}>Add todo</ButtonNew>\r\n            </Buttons>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nconst Todos = props => {\r\n    let todoState = props.tasks.todos;\r\n    let todoBody;\r\n\r\n    let toggleTodo = (id) => {\r\n        props.toggleTodo(id);\r\n    }\r\n\r\n    let todos = todoState.map((item) => <TodoItem onClick={() => toggleTodo(item.id)} completed={item.completed} text={item.text} key={item.id}/>);\r\n\r\n    let updateNewTodoBody = (e) => {\r\n        todoBody = e.target.value;\r\n        props.updateTodoBody(todoBody);\r\n    }\r\n\r\n    let addNewTodo = () => {\r\n        props.addTodo();\r\n    }\r\n\r\n    let onSubmitFrom = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    let hideCompleted = () => {\r\n        props.hideCompleted();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {todos}\r\n            <TodoForm hideCompleted={hideCompleted}\r\n                      onSubmitFrom={onSubmitFrom}\r\n                      addNewTodo={addNewTodo}\r\n                      updateNewTodoBody={updateNewTodoBody}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Todos;","const {v4: uuidv4} = require('uuid');\r\n\r\nexport const addTodo = () => ({\r\n   type: 'ADD_TODO',\r\n   id: uuidv4(),\r\n});\r\n\r\nexport const updateTodoBody = todoBody => ({\r\n   type: 'UPDATE_TODO_BODY',\r\n   todoBody: todoBody\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n   type: 'TOGGLE_TODO',\r\n   id: id\r\n})\r\n\r\nexport const hideCompleted = () => ({\r\n   type: 'HIDE_COMPLETED',\r\n})","import {connect} from \"react-redux\";\r\nimport Todos from \"../components/Todos\";\r\nimport {addTodo, hideCompleted, toggleTodo, updateTodoBody} from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        tasks: state.todoReducers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateTodoBody: (todoBody) => dispatch(updateTodoBody(todoBody)),\r\n        addTodo: () => dispatch(addTodo()),\r\n        toggleTodo: (id) => dispatch(toggleTodo(id)),\r\n        hideCompleted: () => dispatch(hideCompleted())\r\n    }\r\n}\r\n\r\nconst TodoContainer = connect(mapStateToProps, mapDispatchToProps)(Todos)\r\n\r\nexport default TodoContainer;","import React from 'react';\nimport styled from 'styled-components';\nimport TodoContainer from \"./containers/TodoContainer\";\n\nconst AppWrapper = styled.div`\n    max-width: 650px;\n    margin: 20% auto;\n    padding: 25px 50px 13px 50px;\n    background: rgba(255, 255, 255, 0.67);\n    border-radius: 8px;\n`;\n\nconst App = () => {\n    return (\n     <AppWrapper>\n         <TodoContainer/>\n     </AppWrapper>\n    )\n};\nexport default App;\n","let initialState = {\r\n    todos: [],\r\n    newTodoBody: ''\r\n}\r\n\r\nconst todoReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE_TODO_BODY':\r\n            return {\r\n                ...state,\r\n                newTodoBody: action.todoBody\r\n            }\r\n        case 'ADD_TODO':\r\n            return {\r\n                ...state,\r\n                newTodoBody: '',\r\n                todos: [...state.todos, {text: state.newTodoBody, completed: false, id: action.id}]\r\n            }\r\n        case 'TOGGLE_TODO':\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(todo =>\r\n                    (todo.id === action.id) ? { ...todo,  completed: !todo.completed}: todo\r\n                )\r\n            };\r\n        case 'HIDE_COMPLETED':\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(t => !t.completed)\r\n            }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default todoReducers;\r\n","import {combineReducers} from 'redux';\r\nimport todoReducers from './todos';\r\n\r\nexport default combineReducers({\r\n    todoReducers\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport rootReducer from './reducers'\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nwindow.store = store\n"],"sourceRoot":""}